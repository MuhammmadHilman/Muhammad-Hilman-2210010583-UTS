/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Jform;


import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Hilman
 */
public class DataBarang extends javax.swing.JFrame {
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode; 
    /**
     * Creates new form DataBarang
     */
    public DataBarang() {
        initComponents();
        datatable();        // Memuat dan menampilkan data dalam tabel

       
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtcaridata = new javax.swing.JTextField();
        bcaridata = new javax.swing.JButton();
        bcetakdata = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bkeluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Inventaris Barang", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        jLabel1.setText("Cari Data");

        bcaridata.setBackground(new java.awt.Color(204, 204, 255));
        bcaridata.setText("Cari");
        bcaridata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcaridataActionPerformed(evt);
            }
        });

        bcetakdata.setBackground(new java.awt.Color(204, 204, 204));
        bcetakdata.setText("Cetak");
        bcetakdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcetakdataActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        bkeluar.setText("Keluar");
        bkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtcaridata, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bcaridata)
                                .addGap(18, 18, 18)
                                .addComponent(bcetakdata)
                                .addGap(18, 18, 18)
                                .addComponent(bkeluar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcaridata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bcaridata)
                    .addComponent(bcetakdata)
                    .addComponent(bkeluar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bcaridataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcaridataActionPerformed
        // Mengambil teks yang dimasukkan pada field pencarian
        String cari = txtcaridata.getText();

        // Cek apakah field pencarian kosong
        if (cari.isEmpty()) {
            // Jika kosong, tampilkan pesan peringatan
            JOptionPane.showMessageDialog(null, "Masukkan data untuk pencarian");
        } else {
            // Jika ada input, buat query pencarian
            String sql = "SELECT * FROM data_barang WHERE kode_barang LIKE ? OR nama_barang LIKE ? OR kategori_barang LIKE ?";
            try {
                // Siapkan statement untuk menjalankan query
                PreparedStatement stat = conn.prepareStatement(sql);

                // Tentukan parameter pencarian dengan menambahkan wildcard '%' agar dapat mencari berdasarkan bagian dari string
                stat.setString(1, "%" + cari + "%");
                stat.setString(2, "%" + cari + "%");
                stat.setString(3, "%" + cari + "%");

                // Eksekusi query
                ResultSet hasil = stat.executeQuery();

                // Menghapus data lama pada tabel sebelum menampilkan hasil pencarian baru
                tabmode.setRowCount(0);

                // Proses hasil pencarian
                while (hasil.next()) {
                    // Ambil data dari hasil pencarian
                    String kodeBarang = hasil.getString("kode_barang");
                    String namaBarang = hasil.getString("nama_barang");
                    String kategoriBarang = hasil.getString("kategori_barang");
                    int jumlahMasuk = hasil.getInt("jumlah_masuk");
                    int jumlahKeluar = hasil.getInt("jumlah_keluar");
                    int sisaStok = hasil.getInt("sisa_stok");

                    // Siapkan data untuk ditampilkan pada tabel
                    String[] data = {kodeBarang, namaBarang, kategoriBarang, 
                                     String.valueOf(jumlahMasuk), String.valueOf(jumlahKeluar), String.valueOf(sisaStok)};

                    // Tambahkan data ke tabel
                    tabmode.addRow(data);
                }
            } catch (SQLException e) {
                // Tampilkan pesan error jika query gagal dijalankan
                JOptionPane.showMessageDialog(null, "Gagal mencari data: " + e);
            }
        }
    }//GEN-LAST:event_bcaridataActionPerformed

    
    
    private void bcetakdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcetakdataActionPerformed
            String jdbc_driver = "jdbc:mysql://localhost:3306/proyek_uts?zeroDateTimeBehavior=convertToNull [root on Default schema]";
            String user = "root";
            String pass = "";
            String url = "jdbc:mysql://localhost:3306/proyek_uts?zeroDateTimeBehavior=convertToNull";
            File reportFile = new File(".");
             
            try {
            // Membuat koneksi ke database
            Connection conn = DriverManager.getConnection(url, user, pass);

            // Memuat file laporan .jasper (kompilasi dari .jrxml)
            String reportPath = "C:\\Users\\Hp\\Documents\\NetBeansProjects\\Muhammad Hilman-2210010583-UTS\\src\\Report\\reportdata.jasper";


            // Parameter laporan
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("parameter1", "value1");  // Tambahkan parameter laporan jika perlu
            // Anda bisa menambahkan lebih banyak parameter yang sesuai dengan laporan Anda

            // Menjalankan laporan
            JasperPrint jasperPrint = JasperFillManager.fillReport(reportPath, parameters, conn);

            // Menampilkan laporan dalam JasperViewer
            JasperViewer.viewReport(jasperPrint, false);
        } catch (SQLException | JRException e) {
            JOptionPane.showMessageDialog(null, "Gagal mencetak laporan: " + e.getMessage());
        }
    }//GEN-LAST:event_bcetakdataActionPerformed

    private void bkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkeluarActionPerformed
      int confirmed = JOptionPane.showConfirmDialog(null, 
        "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar", 
        JOptionPane.YES_NO_OPTION);

        // Jika pengguna memilih YES, maka tutup form saat ini
        if (confirmed == JOptionPane.YES_OPTION) {
            this.dispose(); // Menutup form saat ini
        }
    }//GEN-LAST:event_bkeluarActionPerformed

    protected void datatable() {
        // Mendefinisikan nama kolom untuk tabel
        Object[] columns = {"Kode Barang", "Nama Barang", "Kategori Barang", "Jumlah Masuk", "Jumlah Keluar", "Sisa Stok"};

        // Membuat model tabel dengan kolom yang sudah didefinisikan
        tabmode = new DefaultTableModel(null, columns);

        // Mengatur model tabel pada jTable1
        jTable1.setModel(tabmode);

        // Query untuk mengambil semua data dari tabel data_barang
        String sql = "SELECT * FROM data_barang";
        try {
            // Menyiapkan statement untuk menjalankan query SQL
            PreparedStatement stat = conn.prepareStatement(sql);

            // Menjalankan query dan mendapatkan hasilnya
            ResultSet hasil = stat.executeQuery();

            // Mengambil data dari hasil query dan memasukkannya ke dalam tabel
            while (hasil.next()) {
                // Mengambil data masing-masing kolom
                String kodeBarang = hasil.getString("kode_barang");
                String namaBarang = hasil.getString("nama_barang");
                String kategoriBarang = hasil.getString("kategori_barang");
                int jumlahMasuk = hasil.getInt("jumlah_masuk");
                int jumlahKeluar = hasil.getInt("jumlah_keluar");
                int sisaStok = hasil.getInt("sisa_stok");

                // Menyiapkan data untuk dimasukkan ke dalam tabel
                String[] data = {kodeBarang, namaBarang, kategoriBarang, 
                                 String.valueOf(jumlahMasuk), String.valueOf(jumlahKeluar), String.valueOf(sisaStok)};

                // Menambahkan data ke dalam tabel
                tabmode.addRow(data);
            }
        } catch (SQLException e) {
            // Menampilkan pesan error jika query gagal dijalankan
            JOptionPane.showMessageDialog(null, "Data gagal ditampilkan: " + e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bcaridata;
    private javax.swing.JButton bcetakdata;
    private javax.swing.JButton bkeluar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtcaridata;
    // End of variables declaration//GEN-END:variables
}
